# This is a basic workflow to help you get started with Actions

name: Run Scraper

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  schedule:
    - cron: "0 11,23 * * *"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2  # GitHub-provided action to set up Python
        with:
          python-version: 3.11  # Specifies the Python version you want to use
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip  # Upgrades pip to the latest version
          pip install -r requirements.txt  # Installs project dependencies from requirements.txt

      - name: Echo Vars
        run: |
          echo "ROOT_URL=${{ vars.ROOT_URL }}"
          echo "SMTP_SERVER=${{ vars.SMTP_SERVER }}"
          echo "SEARCH_URL=${{ vars.SEARCH_URL }}"
          echo "ROOT_URL=${{ vars.ROOT_URL }}"
          echo "SENDER_EMAIL=${{ vars.SENDER_EMAIL }}"
          echo "RECEIVER_EMAIL=${{ vars.RECEIVER_EMAIL }}"

      - name: Add certificate
        run: |
          curl --create-dirs -o $HOME/.postgresql/root.crt 'https://cockroachlabs.cloud/clusters/f4805c6c-d937-4e7b-8881-b83e71cc8fba/cert'
      
      - name: Run
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          SMTP_SERVER: ${{ vars.SMTP_SERVER }}
          ROOT_URL: ${{ vars.ROOT_URL }}
          SEARCH_URL: ${{ vars.SEARCH_URL }}
          SENDER_EMAIL: ${{ vars.SENDER_EMAIL }}
          RECEIVER_EMAIL: ${{ vars.RECEIVER_EMAIL }}
          
        run: |
          python htmlibs.py  # Command to run your tests
